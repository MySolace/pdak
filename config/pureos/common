# -*- mode:sh -*-
# log something (basically echo it together with a timestamp)
#
# Set $PROGRAM to a string to have it added to the output.
function log () {
        local prefix=${PROGRAM:-}
        echo "$(date +"%b %d %H:%M:%S") $(hostname -s) ${prefix}[$$]: $@"
}

# log the message using log() but then also send a mail
# to the address configured in MAILTO (if non-empty)
function log_error () {
        log "$@"
        if [ -z "${MAILTO}" ]; then
                echo "$@" | mail -a "X-Debian: DAK" -e -s "[$PROGRAM@$(hostname -s)] ERROR [$$]" -a "From: PureOS Archive Masters <archive@puri.sm>" ${MAILTO}
        fi
}

# debug log, only output when DEBUG=1
function debug () {
    if [ $DEBUG -eq 1 ]; then
        log "$*"
    fi
}

# Do the unchecked processing, in case we have files.
function do_unchecked () {
    cd $unchecked

    changes=$(find . -maxdepth 1 -mindepth 1 -type f -name \*.changes | sed -e "s,./,," | xargs)
    report=$queuedir/REPORT
    timestamp=$(date "+%Y-%m-%d %H:%M")
    UNCHECKED_WITHOUT_LOCK=${UNCHECKED_WITHOUT_LOCK:-""}

    echo "$timestamp": ${changes:-"Nothing to do"}  >> $report
    dak process-upload -a ${UNCHECKED_WITHOUT_LOCK} -d "$unchecked" >> $report
    dak process-commands -d "$unchecked" >> $report
}

# process NEW policy queue
function do_new () {
    if [ "${PROGRAM}" = "dinstall" ]; then
	log "Doing NEW processing"
    fi

   (dak process-policy new; dak process-policy byhand) | mail -a "X-Debian: DAK" -e -s "PureOS NEW and BYHAND processing" -a "From: PureOS Archive Masters <archive@puri.sm>" archive@puri.sm

    dak clean-suites -a new
}

function reports() {
    # Send a report on NEW/BYHAND packages
    log "Nagging ftpteam about NEW/BYHAND packages"
    dak queue-report | mail -a "X-Debian: DAK" -e -s "PureOS NEW and BYHAND on $(date +%D)" -a "From: PureOS Archive Masters <archive@puri.sm>" archive@puri.sm
    # and one on crufty packages
    log "Sending information about crufty packages"
    dak cruft-report --mode bdo -R > $webdir/cruft-report-daily.txt
     #dak cruft-report -R -s experimental >> $webdir/cruft-report-daily.txt
    cat $webdir/cruft-report-daily.txt | mail -a "X-Debian: DAK" -e -s "PureOS archive cruft report for $(date +%D)" -a "From: PureOS Archive Masters <archive@puri.sm>" archive@puri.sm
}

function get_archiveroot() {
    local archivename="$1"
    local query="SELECT path FROM archive WHERE name='${archivename}'"
    local archiveroot="$(psql -tAc "${query}")"
    if [ -z "${archiveroot}" ]; then
        echo "get_archiveroot: couldn't get archiveroot for '${archivename}'" >&2
        return 1
    fi
    echo "${archiveroot}"
}
